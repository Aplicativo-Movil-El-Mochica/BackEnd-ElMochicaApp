name: CI/CD for Microservicio-Usuario

on:
  push:
    branches:
      - main  # Cambia a la rama que deseas usar para desplegar
    paths:
      - 'Microservicio-Usuario/**'  # Se ejecuta solo si hay cambios en esta carpeta

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for Gradle
      run: chmod +x Microservicio-Usuario/gradlew  # Da permisos de ejecuciÃ³n a gradlew

    - name: Create Firebase credentials file
      run: |
        echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" > Microservicio-Usuario/src/main/resources/serviceaccount.json

    - name: Build with Gradle
      working-directory: Microservicio-Usuario  # Cambia al directorio del microservicio
      run: ./gradlew clean build -x test  # Comando Gradle para construir el proyecto sin ejecutar pruebas

    - name: Transfer files via SSH
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_KEY: ${{ secrets.EC2_KEY }}
      run: |
        echo "${EC2_KEY}" > ec2-key.pem
        chmod 400 ec2-key.pem
        scp -o StrictHostKeyChecking=no -i ec2-key.pem Microservicio-Usuario/build/libs/app.jar $EC2_USER@$EC2_HOST:/home/$EC2_USER/app.jar

    - name: Restart usuario.service on EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_KEY: ${{ secrets.EC2_KEY }}
      run: |
        ssh -o StrictHostKeyChecking=no -i ec2-key.pem $EC2_USER@$EC2_HOST \
        "sudo systemctl stop microservicio-usuario.service && sudo systemctl start microservicio-usuario.service && sudo systemctl status microservicio-usuario.service"
